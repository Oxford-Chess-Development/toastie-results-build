{"version":3,"sources":["css/crosstable.module.css","css/chesscom.module.css","assets/icons/watch.svg","utils/requests.ts","utils/regexes.ts","chess/ChessCom.tsx","tournament/Pairings.tsx","tournament/CrossTable.tsx","Tournament.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","errorCallback","console","log","process","ping","prodServer","GET","options","Object","assign","method","axios","then","res","data","catch","e","error","response","status","statusText","config","url","split","pop","join","defaults","baseURL","chessCom","Chess","ChessWebAPI","queue","loadChessComGames","id","board","a","Promise","rej","dispatch","getTeamLiveMatchBoard","body","loadChessComMatch","getTeamLiveMatch","Piece","Map","ChessCom","props","useState","enforceBoards","boards","setBoards","useReducer","state","action","arr","slice","boardScores","game","games","setGame","setID","i","name","teams","setTeam","player","username","toLowerCase","team","teamDict","setTeamDict","matchFinished","setMatchFinished","set","boardsFinished","setFinished","fetchChessCom","useCallback","matches","matchURL","match","regexes","Number","t","findIndex","v","players","values","useEffect","length","x","fetchedGames","board_scores","Date","now","end_time","message","includes","setInterval","clearInterval","className","styles","container","map","pairing","scores","entries","g","flip","black","w","white","rating","b","reverse","FENBoard","fen","wrapper","boardLabel","href","target","rel","line","row","p","square","piece","get","Pairings","expanded","setExpanded","round","time","timeDict","setTime","populateTimeDict","pairings","link","find","start_time","params","meta","valueOf","toString","style","width","trim","playerDict","undefined","key","firstName","padding","histories","onClick","src","icons","alt","colSpan","chessComLink","chessComTeamLink","columns","pre","sort","value","postConvert","s","competitors","lastName","show","entry","showRatings","roundColumn","convert","output","nb","parseInt","endsWith","aN","bN","post","score","parseFloat","toFixed","played","gamePoints","winPercentage","performanceRating","ratingDifference","expectedScore","expectedDifference","CrossTable","totalRounds","useMemo","settings","roundHeaders","h","push","headers","keys","filter","setSortHeader","sortBy","renderRounds","renderRows","rowsData","trace","pres","rounds","rowData","sortFunc","sortMeta","startsWith","sortCol","indexOf","tr","j","display","cell","table","scope","th","headerCell","Tournament","loaded","setLoaded","setSettings","setStatus","setPlayers","setPairings","dict","all","Array","sections","section","setSection","hash","window","location","setDisplayPlayer","from","App","basename","render","exact","path","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,GAAK,uBAAuB,MAAQ,4B,mBCAtDD,EAAOC,QAAU,CAAC,QAAU,0BAA0B,UAAY,4BAA4B,WAAa,6BAA6B,MAAQ,wBAAwB,UAAU,0BAA0B,IAAM,sBAAsB,OAAS,yBAAyB,EAAI,oBAAoB,EAAI,sB,6JCDtSD,EAAOC,QAAU,IAA0B,mC,6MCEvCC,EAA2C,aAI/CC,QAAQC,IAAI,SAFSC,GAGrB,IAAMC,EAA2BC,IAM1B,SAASC,EAAIC,GAInB,OAHAA,EAAUC,OAAOC,OAAOF,EAAS,CAChCG,OAAQ,QAEFC,IAAMJ,GACXK,MAAK,SAACC,GAAD,OAA6BA,EAAIC,QACtCC,OAAM,SAACC,GAAmB,IAAD,EAGzB,MAFAf,QAAQgB,MAAMD,GACVA,EAAEE,UAAUlB,EAAc,CAACgB,EAAEE,SAASC,OAAQH,EAAEE,SAASE,WAAY,IAAK,eAAMJ,EAAEE,SAASG,OAAOC,WAAxB,aAAM,EAAuBC,MAAM,KAAKC,QAAOC,KAAK,MAC5HT,KAZTL,IAAMe,SAASC,QAAUvB,E,8DCVZwB,EAAW,uE,gCCalBC,EAAQ,IAAIC,IAAY,CAAEC,OAAO,IAEhC,SAAeC,EAAtB,oC,4CAAO,WAAiCC,EAAYC,GAA7C,SAAAC,EAAA,+EACI,IAAIC,SAAQ,SAACvB,EAAKwB,GACrBR,EAAMS,SAAST,EAAMU,uBAAuB,SAACzB,EAA2BG,GACpE,GAAIA,EAAO,OAAOoB,EAAIpB,GACtBJ,EAAIC,EAAK0B,QACV,CAACP,EAAIC,QALT,4C,sBASA,SAAeO,EAAtB,kC,4CAAO,WAAiCR,GAAjC,SAAAE,EAAA,+EACI,IAAIC,SAAQ,SAACvB,EAAKwB,GACrBR,EAAMS,SAAST,EAAMa,kBAAkB,SAAC5B,EAA2BG,GAC/D,GAAIA,EAAO,OAAOoB,EAAIpB,GACtBJ,EAAIC,EAAK0B,QACV,CAACP,QALL,4C,sBAcP,IAAMU,EAAmC,IAAIC,IAAI,CAC7C,CAAC,IAAK,kBAAC,IAAD,OACN,CAAC,IAAK,kBAAC,IAAD,OACN,CAAC,IAAK,kBAAC,IAAD,OACN,CAAC,IAAK,kBAAC,IAAD,OACN,CAAC,IAAK,kBAAC,IAAD,OACN,CAAC,IAAK,kBAAC,IAAD,SAQK,SAASC,EAASC,GAAuB,IAAD,EAEvBC,mBAASD,EAAME,eAAiB,IAFT,mBAE5CC,EAF4C,KAEpCC,EAFoC,OAG1BC,sBAAW,SAACC,EAA6DC,GAK9F,IAAIC,EAAMF,EAAMG,MAAM,GAKtB,OAJAD,EAAID,EAAOnB,OAAS,CAChBsB,YAAaH,EAAOG,YACpBC,KAAMJ,EAAOI,MAEVH,IACR,IAdgD,mBAG5CI,EAH4C,KAGrCC,EAHqC,OAe/BZ,mBAAS,GAfsB,mBAe5Cd,EAf4C,KAexC2B,EAfwC,OAgB1BT,sBAAW,SAACC,EAAyBC,GAK1D,OADAD,EAAMC,EAAOQ,GAAKR,EAAOS,KAClBV,IACR,CAAC,GAAI,KAtB2C,mBAgB5CW,EAhB4C,KAgBrCC,EAhBqC,OAuBnBb,sBAAW,SAACC,EAAgCC,GACxE,IAAIxC,EAAML,OAAOC,OAAO,GAAI2C,GAE5B,OADAvC,EAAIwC,EAAOY,OAAOC,SAASC,eAAiBd,EAAOe,KAC5CvD,IACR,IA3BgD,mBAuB5CwD,EAvB4C,KAuBlCC,EAvBkC,OA4BTvB,oBAAS,GA5BA,mBA4B5CwB,EA5B4C,KA4B7BC,EA5B6B,OA6BbrB,sBAAW,SAACC,EAAkBC,GAIhE,IAAIC,EAAMF,EAAMG,MAAM,GAEtB,OADAD,EAAID,EAAOnB,OAASmB,EAAOoB,IACpBnB,IACR,IApCgD,mBA6B5CoB,EA7B4C,KA6B5BC,EA7B4B,KAsC7CC,EAAgBC,sBAAW,sBAAC,sCAAA1C,EAAA,yDAC1B2C,EAAUhC,EAAMiC,SAASC,MAAMC,GADL,yCAEThF,QAAQgB,MAAM,gBAAiB6B,EAAMiC,WAF5B,cAG1B9C,EAAKiD,OAAOJ,EAAQ,IAHM,kBAKTrC,EAAkBR,GALT,OAQ1B,KAHIO,EALsB,QAMjBS,QAAQC,EAAUV,EAAKS,QACZ,aAAhBT,EAAKrB,QAAyC,cAAhBqB,EAAKrB,QAAwBqD,GAAiB,GAPtD,aAQrB,IAAIW,EAAC,KACFtB,EAAIE,EAAMqB,WAAU,SAAAC,GAAC,OAAKA,GAAKA,IAAMF,EAAErB,QAC3CE,EAAQ,CAAEF,KAAMqB,EAAErB,KAAMD,MAVF,oBAWHsB,EAAEG,SAXC,IAWtB,2BAA8B,CAAC,IAAtBrB,EAAqB,QAC1BK,EAAY,CACRL,SACAG,KAAMP,KAdQ,gCAQ1B,MAAcrD,OAAO+E,OAAO/C,EAAKuB,OAAjC,eAA0C,IARhB,kDAmB1B9D,QAAQgB,MAAR,MAnB0B,QAqB9B2C,EAAM3B,GArBwB,0DAsB/B,CAACa,EAAMiC,SAAUhB,IAEpByB,qBAAU,WACNZ,MACD,CAACA,IAEJ,IAAMxE,EAAOyE,sBAAW,sBAAC,gCAAA1C,EAAA,yDAChBF,EADgB,qDAEjBsC,IAAiBb,EAAM+B,OAFN,qDAAAtD,EAAA,iBAGZ0B,GAHY,eAAA1B,EAAA,0DAIbuC,EAAeb,GAJF,+DAKb6B,EAAI1D,EAAkBC,EAAI4B,GACzBjD,MAAK,SAAC+E,GACH,IAAIlC,EAAOkC,EAAajC,MAAMiC,EAAajC,MAAM+B,OAAS,GAO1D,OANA9B,EAAQ,CACJF,KAAMA,EACND,YAAamC,EAAaC,aAC1B1D,MAAO2B,IAEPgC,KAAKC,MAAQrC,EAAKsC,UAAUpB,EAAY,CAACzC,MAAO2B,EAAGY,KAAK,KACrD,KAEV1D,OAAM,SAACC,GACJ,OAAIA,EAAEgF,QAAQC,SAAS,wBACnB/C,EAAUW,EAAI,IACP,MAIfZ,KAAYH,EAAME,eAAiB,IAvBtB,gCAwBH0C,EAxBG,uBAwBG,IAxBH,iGAGZ7B,EAAI,EAHQ,YAGLA,EAAIZ,EAAS,GAHR,0CAGZY,GAHY,uKAGWA,IAHX,2DA4BtB,CAAC5B,EAAIgB,EAAQsB,EAAeG,EAAgBhB,EAAM+B,SAOrD,OALAD,qBAAU,WACN,IAAIE,EAAIQ,YAAY9F,EAAM,KAC1B,OAAO,kBAAM+F,cAAcT,MAC5B,CAACtF,IAECsD,EAAM+B,QAAWxC,EAGlB,yBAAKmD,UAAWC,IAAOC,WAClB5C,EAAM6C,KAAI,SAACC,EAAS3C,GACjB,IAAK2C,EAAS,OAAO,KACrB,IAAIC,EAASjG,OAAOkG,QAAQF,EAAQhD,aAChCmD,EAAIH,EAAQ/C,KACZmD,EAAOvC,EAASsC,EAAEE,MAAM3C,SAASC,eAChC2C,EACD,oCACKH,EAAEI,MAAM7C,SADb,KACyByC,EAAEI,MAAMC,OADjC,IAC0C,IACtC,kBAAC,IAAD,OAHAC,EAKJ,oCACKN,EAAEE,MAAM3C,SADb,KACyByC,EAAEE,MAAMG,OADjC,IAC0C,IACtC,kBAAC,IAAD,OAGJJ,IAAMH,EAASA,EAAOS,WAC1B,IACIhF,EADM,IAAIiF,IAASR,EAAES,KACTlF,MAChB,OACI,yBAAKkE,UAAWC,IAAOgB,SACnB,yBAAKjB,UAAWC,IAAOiB,YACnB,0BAAMlB,UAAU,QAAQK,EAAO,GAAG,IAClC,uBAAGc,KAAM,mCAAqCZ,EAAErF,IAAIC,MAAM,KAAKC,MAAOgG,OAAO,SAASC,IAAI,uBACtF,kBAAC,IAAD,OAEJ,0BAAMrB,UAAU,QAAQK,EAAO,GAAG,KAEtC,6BAAMG,EAAOE,EAAIG,EAAG,IAAKlD,EAAM,IAC3B,yBAAKqC,UAAWC,IAAOnE,OAClBA,EAAMqE,KAAI,SAAAmB,GACP,OACI,yBAAKtB,UAAWC,IAAOsB,KAClBD,EAAKnB,KAAI,SAAAqB,GACN,OACI,yBAAKxB,UAAW,CAACC,IAAOwB,OAAQxB,KA9J7DyB,EA8J2EF,EA7J1FE,EAAM3D,gBAAkB2D,EAAc,IACnC,OA4J4FrG,KAAK,MACnDkB,EAAMoF,IAAIH,EAAEzD,gBA/J9D,IAAgB2D,UAuKC,6BAAMlB,EAAOK,EAAIH,EAAG,IAAK/C,EAAM,SA/Cd,2D,qBC1I1B,SAASiE,EAASlF,GAAqC,IAAD,EAEjCC,mBAAS,IAFwB,mBAE1DkF,EAF0D,KAEhDC,EAFgD,KAI3DC,EAAQrF,EAAM3B,OAAOgH,OAAS,EAJ6B,EAMrChF,sBAAW,SAACC,EAAgDC,GAKpF,IAAIxC,EAAML,OAAOC,OAAO,GAAI2C,GAE5B,OADAvC,EAAIwC,EAAOpB,IAAM,CAACoB,EAAO+E,KAAM/E,EAAOiC,SAC/BzE,IACR,IAd8D,mBAM1DwH,EAN0D,KAMhDC,EANgD,KAgB3DC,EAAmB1D,sBAAW,sBAAC,gCAAA1C,EAAA,oEACjBW,EAAM0F,UADW,0BACxBb,EADwB,QAEzBc,EAAOjI,OAAO+E,OAAOoC,EAAI,IAAIe,MAAK,SAAArD,GAAC,OAAIA,KAC3C,IAAKoD,EAAM,iBACX,IAAI3D,EAAU2D,EAAKzD,MAAMC,GAEpBwD,EADA3D,EACO,2CAA6CA,EAAQ,GAD5C,GAGrBrC,EADSyC,OAAOJ,EAAQ,KAEnBlE,MAAK,SAAC4B,GAAD,OAAU8F,EAAQ,CAACrG,GAAI6C,EAAQ,GAAIsD,KAAwB,IAAlB5F,EAAKmG,gBACnD5H,MAFL,uCAEW,WAAOC,GAAP,eAAAmB,EAAA,0DACCnB,EAAEgF,QAAQC,SAAS,aADpB,gCAEkB3F,EAAI,CACjBgB,IAAK,eAAiBwB,EAAMb,GAAK,0BACjC2G,OAAQ,CACJtH,IAAKmH,KALd,OAEKI,EAFL,OAQCP,EAAQ,CACJrG,GAAI6C,EAAQ,GACZsD,KAAM,IAAIvC,KAAKgD,EAAK,eAAeC,UACnCxD,QAASuD,EAAK,sBAXnB,sBAcE5I,QAAQgB,MAAMD,GAdhB,2CAFX,wDAR6B,wTA2BrC,CAAC8B,EAAM0F,SAAUF,IAMpB,OAJG9C,qBAAU,WACN+C,MACD,CAACA,IAGN,iCAEC,2CAAiB,IAAI1C,KAAKA,KAAKC,OAAOiD,WAAWxF,MAAM,KACvD,2BAAO6C,UAAU,6BAChB,+BACC,4BACC,wBAAI4C,MAAO,CAACC,MAAO,UAAnB,SACA,wBAAID,MAAO,CAACC,MAAO,UAAnB,QACA,wBAAID,MAAO,CAACC,MAAO,QACnB,wBAAID,MAAO,CAACC,MAAO,QAAnB,cACA,wBAAID,MAAO,CAACC,MAAO,QACnB,wBAAID,MAAO,CAACC,MAAO,UAAnB,cACA,wBAAID,MAAO,CAACC,MAAO,UAAnB,WAGF,+BACEnG,EAAM0F,SAASjC,KAAI,SAACoB,EAAK9D,GAAO,IAAD,MAC3B5B,EAAK,CAAC0F,EAAI,GAAGuB,OAAQvB,EAAI,GAAGuB,QAAQzH,KAAK,KACzCqF,EAAIhE,EAAMqG,WAAWpB,IAAIJ,EAAI,GAAGuB,QAChCjC,EAAInE,EAAMqG,WAAWpB,IAAIJ,EAAI,GAAGuB,QAChCT,EAAOjI,OAAO+E,OAAOoC,EAAI,IAAIe,MAAK,SAAArD,GAAC,OAAIA,KACvCP,EAAO,UAAG2D,SAAH,aAAG,EAAMzD,MAAMC,GAErBwD,EADA3D,EACO,2CAA6CA,EAAQ,GAD5C,GAErB,IAAIsD,EAAOtD,GAAWuD,EAASvD,EAAQ,IAAMuD,EAASvD,EAAQ,IAAI,GAAK,EACnE9B,EAAoC8B,GAAWuD,EAASvD,EAAQ,IAAMuD,EAASvD,EAAQ,IAAI,QAAKsE,EACpG,OACC,oCACC,wBAAIC,IAAK,CAAC,MAAOxF,GAAGpC,KAAK,MACxB,4BAAI,yBAAK2E,UAAU,cAAf,OAA6BU,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAGwC,YACpC,wBAAIN,MAAO,CAACO,QAAS,IACnBd,EAAO,uBAAGrC,UAAU,SAASmB,KAAMkB,EAAKS,OAAQ1B,OAAO,SAASC,IAAI,uBACpE,kBAAC,IAAD,OACM,MAER,wBAAIrB,UAAW,QAAf,OAAwBU,QAAxB,IAAwBA,GAAxB,UAAwBA,EAAG0C,UAAUrB,UAArC,aAAwB,EAAqB1E,MAC7C,4BAAK2E,EAAO,IAAIvC,KAAKuC,GAAMW,WAAWxF,MAAM,EAAG,IAAM,KACrD,wBAAI6C,UAAW,QAAf,OAAwBa,QAAxB,IAAwBA,GAAxB,UAAwBA,EAAGuC,UAAUrB,UAArC,aAAwB,EAAqB1E,MAC7C,wBAAIuF,MAAO,CAACO,QAAS,IACnBd,EAAO,yBAAKrC,UAAU,SAASqD,QAAS,kBAAMvB,EAAYD,EAAW,GAAKhG,KAC1E,yBAAKmE,UAAU,OAAOsD,IAAKC,IAAaC,IAAK,iBACrC,MAEV,4BAAI,yBAAKxD,UAAU,cAAf,OAA6Ba,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAGqC,aAEpCb,GAAQR,IAAahG,EAAI,4BACzB,wBAAI4H,QAAS,MACXlC,EAAI,GAAGmC,cAAgBnC,EAAI,GAAGoC,mBAC9BpC,EAAI,GAAGoC,iBACN,kBAAClH,EAAD,CAAUkC,SAAU4C,EAAI,GAAGoC,iBAAkB/G,cAAekC,OAAOlC,KAEpE,OAGK,Y,6BC9FVgH,EAAU,CACfC,IAAK,CACJhI,GAAI,CACH6B,KAAM,GACNsC,UAAW,QACX8D,MAAM,EACNC,MAAO,kBAAc,GACrBC,YAAa,SAAC/E,EAAWxB,GAAZ,OAAmC,EAAIA,GAAGkF,aAExDjF,KAAM,CACLA,KAAM,OACNsC,UAAW,aACXnE,GAAI,SAAC2F,GAAD,OAAuBA,EAAE3F,IAC7BiI,KAAM,SAAC/H,EAAW8E,GACjB,OAAI9E,EAAI8E,EAAU,EACd9E,EAAI8E,GAAW,EACZ,GAERkD,MAAO,SAACvC,EAAW/D,EAAWwG,GAAvB,MAA2E,eAAlBA,EAAEC,YAA+B,CAAC1C,EAAE0B,UAAW1B,EAAE2C,UAAU9I,KAAK,KAAOmG,EAAE0B,YAE1ItC,OAAQ,CACPlD,KAAM,SACNsC,UAAW,SACX+D,MAAO,SAACvC,GAAD,OAAuBA,EAAEZ,QAChCwD,KAAM,SAACC,EAAe5G,EAAWwG,GAA3B,OAAqDA,EAAEK,eAG/DC,YAAa,CACZ7G,KAAM,SAACuF,EAAaxF,GAAd,OAAoCwF,EAAI9F,OAAO,IACrD6C,UAAW,SAACf,EAAWxB,EAAWwG,GACjC,MAAU,MAANhF,EAAkB,OACZ,KAANA,EAAiB,QACT,UAEb8E,MAAO,aACPS,QAAS,SAACvF,EAAWuC,EAAWyC,GAC/B,GAAU,KAANhF,EAAU,MAAO,GAChB,GAAU,MAANA,EAAW,MAAO,IAC3B,IACIwF,EADAC,EAAKC,SAAS1F,GAKlB,OAHgBwF,EAAL,KAAPC,EAAqB,OACXA,EAAG/B,WACb1D,EAAE2F,SAAS,OAAMH,GAAU,KACxBA,GAERX,KAAM,SAAC/H,EAAW8E,GACjB,GAAI9E,IAAM8E,EAAG,OAAO,EACpB,GAAU,KAAN9E,EAAU,OAAQ,EACjB,GAAU,KAAN8E,EAAU,OAAQ,EAC3B,GAAU,MAAN9E,EAAW,OAAO,EACjB,GAAU,MAAN8E,EAAW,OAAQ,EALW,MAMxB,CAAC8D,SAAS5I,GAAI4I,SAAS9D,IAAjCgE,EANkC,KAM9BC,EAN8B,KASvC,OAFI/I,EAAE6I,SAAS,OAAMC,GAAM,MACvBhE,EAAE+D,SAAS,OAAME,GAAM,MACpBA,EAAKD,IAGdE,KAAM,CACLC,MAAO,CACNtH,KAAM,KACNsC,UAAW,SACX+D,MAAO,SAACvC,GAAD,OAAeyD,WAAWzD,EAAEwD,MAAMrC,aACzC6B,QAAS,SAACvF,EAAWuC,GAAZ,OAAkCvC,EAAEiG,QAAQ,GAAK,MAAQ1D,EAAE2D,SAErEC,WAAY,CACX1H,KAAM,KACNsC,UAAW,SACX+D,MAAO,SAACvC,GAAD,OAAeA,EAAE4D,YACxBZ,QAAS,SAACvF,GAAD,OAAuBA,EAAEiG,QAAQ,KAE3CG,cAAe,CACd3H,KAAM,QACNsC,UAAW,SACX+D,MAAO,SAACvC,GAAD,OAAoC,IAAbA,EAAE2D,QAAgB,EAAc,IAAV3D,EAAEwD,MAAcxD,EAAE2D,QACtEX,QAAS,SAACvF,GACT,OAAIA,EAAI,EAAU,IACXA,EAAEiG,YAGXI,kBAAmB,CAClB5H,KAAM,OACNsC,UAAW,SACX+D,MAAO,SAACvC,GAAD,OAAeA,EAAE8D,mBACxBd,QAAS,SAACvF,GAAD,OAAuBA,EAAEiG,WAClCd,KAAM,SAACC,EAAe5G,EAAWwG,GAA3B,OAAqDA,EAAEK,cAE9DiB,iBAAkB,CACjB7H,KAAM,SACNsC,UAAW,SACX+D,MAAO,SAACvC,GACP,OAAKA,EAAE8D,kBACA9D,EAAE8D,kBAAoB9D,EAAEZ,OADE,GAGlC4D,QAAS,SAACvF,GACT,OAAKA,EACDA,EAAI,EAAU,IAAMA,EAAE0D,WACd1D,EAAE0D,WAFC,IAIhByB,KAAM,SAACC,EAAe5G,EAAWwG,GAA3B,OAAqDA,EAAEK,cAE9DkB,cAAe,CACd9H,KAAM,WACNsC,UAAW,SACX+D,MAAO,SAACvC,GAAD,OAAuBA,EAAEgE,eAChChB,QAAS,SAACvF,EAAWuC,GAAZ,OAAkCvC,EAAEiG,QAAQ,GAAK,MAAQ1D,EAAE2D,QACpEf,KAAM,SAACC,EAAe5G,EAAWwG,GAA3B,OAAqDA,EAAEK,cAE9DmB,mBAAoB,CACnB/H,KAAM,SACNsC,UAAW,SACX+D,MAAO,SAACvC,GAAD,OAAuBA,EAAEwD,MAAQxD,EAAEgE,eAC1ChB,QAAS,SAACvF,GACT,MAAiB,qBAANA,EAA0B,GACjCA,EAAI,EAAU,IAAMA,EAAEiG,QAAQ,GACtBjG,EAAEiG,QAAQ,IAEvBd,KAAM,SAACC,EAAe5G,EAAWwG,GAA3B,OAAqDA,EAAEK,gBAcjD,SAASoB,EAAWhJ,GAElC,IAAMiJ,EAAcC,mBAAQ,WAK3B,OAHIlJ,EAAM3B,OAAOgH,MAAQrF,EAAMmJ,SAASF,aACA,aAA/BjJ,EAAMmJ,SAASF,YAD2CjJ,EAAM3B,OAAOgH,MAE7DrF,EAAMmJ,SAASF,cAEhC,CAACjJ,EAAM3B,OAAOgH,MAAOrF,EAAMmJ,SAASF,cAEjCG,EAAeF,mBAAQ,WAE5B,IADA,IAAIG,EAAI,GACCtI,EAAI,EAAGA,GAAKkI,EAAalI,IACjCsI,EAAEC,KAAK,SAAWvI,EAAEkF,YAErB,OAAOoD,IACL,CAACJ,IAEEM,EAAoBL,mBAAQ,uCAAUxL,OAAO8L,KAAKtC,EAAQC,MAA9B,YAAuCiC,GAAvC,YAAwD1L,OAAO8L,KAAKtC,EAAQmB,UAAQ,CAACe,IACrHK,QAAO,SAAClD,EAAKxF,GACb,IAAIgF,EAAOmB,EAAQC,IAAIZ,IAAQW,EAAQmB,KAAK9B,GAC5C,OAAKR,KACDA,EAAK2B,OAAS3B,EAAK2B,KAAK,KAAuB3G,EAAGf,EAAMmJ,cAIxDO,EAAgB3H,uBAAY,SAACzB,EAAyBC,GAC3D,OAAKgJ,EAAQpG,SAAS5C,GAClBD,EAAM,KAAOC,EAAe,CAACA,EAAQ,GAC7B,CAACA,EAAQD,EAAM,GAAK,GAFM,CAAC,GAAI,KAGzC,CAACiJ,IA9B+D,EA+B5ClJ,qBAAWqJ,EAAe,CAAC,QAAS,IA/BQ,mBA+B5DtC,EA/B4D,KA+BtDuC,EA/BsD,KAiC7DC,EAAe7H,uBAAY,SAAC+C,GAEjC,IADA,IAAInB,EAAS,CAAC,IACL5C,EAAI,EAAGA,GAAKkI,EAAalI,IAC5B+D,EAAE4B,UAAU3F,IAKY,OAAzB+D,EAAE4B,UAAU3F,GAAGmB,YAA2CoE,IAAzBxB,EAAE4B,UAAU3F,GAAGmB,MAAqByB,EAAO5C,GAAK,IAChF4C,EAAO5C,GAAM+D,EAAE4B,UAAU3F,GAAGmB,MAAiB+D,WACxB,QAAtBnB,EAAE4B,UAAU3F,GAAG5B,KAAcwE,EAAO5C,IAAM,MANzCA,IAAMf,EAAM3B,OAAOgH,MAAO1B,EAAO5C,GAAK,IACrC4C,EAAO5C,GAAK,GAOnB,OAAO4C,EAAOlD,MAAM,KAClB,CAACwI,EAAajJ,EAAM3B,OAAOgH,QAExBwE,EAA4BX,mBAAQ,WAEzC,IADA,IAAIY,EAAW,GADgC,WAEtC/I,GACR,IAAI+D,EAAI9E,EAAMwC,QAAQzB,GACtB,GAAa,QAAT+D,EAAE3F,GAAc,sBACJmH,IAAZxB,EAAEwD,OAAqBnL,QAAQ4M,QAEnC,IADA,IAAIC,EAAO,GACX,MAAsBtM,OAAOkG,QAAQsD,EAAQC,KAA7C,eAAmD,CAAC,IAAD,sBAAtCpB,GAAsC,WAC9CA,EAAK2B,OAAS3B,EAAK2B,KAAK5C,EAAG/D,EAAGf,EAAMmJ,WACxCa,EAAKV,KAAK,CAACvD,EAAKsB,MAAMvC,EAAG/D,EAAGf,EAAMmJ,UAAWpD,EAAMjB,IAIpD,IAFA,IAAImF,EAASL,EAAa9E,GAAGrB,KAAI,SAAAkE,GAAK,MAAI,CAACA,EAAwBT,EAAQW,YAAa/C,MACpFuD,EAAO,GACX,MAAsB3K,OAAOkG,QAAQsD,EAAQmB,MAA7C,eAAoD,CAAC,IAAD,sBAAvCtC,GAAuC,WAC/CA,EAAK2B,OAAS3B,EAAK2B,KAAK5C,EAAG/D,EAAGf,EAAMmJ,WACxCd,EAAKiB,KAAK,CAACvD,EAAKsB,MAAMvC,EAAG/D,EAAGf,EAAMmJ,UAAWpD,EAAMjB,IAEpD,IAAIoF,EAAO,UAAOF,EAAP,YAAgBC,GAAW5B,GACtCyB,EAASR,KAAKY,IAhBNnJ,EAAI,EAAGA,EAAIf,EAAMwC,QAAQG,OAAQ5B,IAAK,EAAtCA,GAmBT,IAAIoJ,EAAW,SAAC9K,EAAW8E,GAAZ,OAAkCA,EAAI9E,GACjD+K,EAAWhD,EAAK,GAAGiD,WAAW,SAAWnD,EAAQW,YAAeX,EAAQC,IAAIC,EAAK,KAAOF,EAAQmB,KAAKjB,EAAK,IAC9G,GAAIgD,IAA8B,IAAlBA,EAAShD,KAAgB,CACpCgD,EAAShD,OAAM+C,EAAWC,EAAShD,MACvC,IAAIkD,EAAUf,EAAQgB,QAAQnD,EAAK,KAClB,IAAbkD,IACJR,EAAWA,EAAS1C,MAAK,SAAC/H,EAAG8E,GAAJ,OAAUiD,EAAK,GAAK,EAAI+C,EAAShG,EAAEmG,GAAS,GAAIjL,EAAEiL,GAAS,IAAMH,EAAS9K,EAAEiL,GAAS,GAAInG,EAAEmG,GAAS,QA2B9H,OAxBWR,EAASrG,KAAI,SAACyG,EAASnJ,GACjC,OACC,wBAAIwF,IAAK,OAASxF,EAAGuC,UAAWC,IAAOiH,IACrCN,EAAQzG,KAAI,WAAiDgH,GAAe,IAAD,mBAA7DpD,EAA6D,KAAtDtB,EAAsD,KAAhDjB,EAAgD,KACvE4F,EAAUrD,EAAQA,EAAMpB,WAAa,GACrCF,EAAK+B,QAAS4C,EAAU3E,EAAK+B,QAAQT,EAAOvC,EAAG9E,EAAMmJ,UAChDpD,EAAKuB,cAAaoD,EAAU3E,EAAKuB,YAAYoD,EAAS3J,IACxC,qBAAZ2J,GAAuC,KAAZA,IAAgBA,EAAU,UAChE,IAAIpH,EAAsC,oBAAnByC,EAAKzC,UAA2ByC,EAAKzC,UAAUoH,EAASD,EAAGzK,EAAMmJ,UAAYpD,EAAKzC,UACzG,OACC,4BACC,yBACCnE,GAAI4G,EAAK5G,GAAK4G,EAAK5G,GAAG2F,EAAG2F,QAAKnE,EAC9BC,IAAK,CAACc,EAAOoD,GAAG9L,KAAK,KACrB2E,UAAW,CAACC,IAAOoH,KAAMrH,EAAWC,IAAOD,IAAY3E,KAAK,MAE3D+L,aASN,CAAC1K,EAAMwC,QAASxC,EAAMmJ,SAAUS,EAAcxC,IAEjD,OACC,iCACC,2BAAO9D,UAAW,CAAC,4BAA6BC,IAAOqH,OAAOjM,KAAK,MAClE,+BACC,4BACE4K,EAAQ9F,KAAI,SAAC8C,EAAKxF,GAClB,IAAIgF,EAAOQ,EAAI8D,WAAW,SAAWnD,EAAQW,YAAeX,EAAQC,IAAIZ,IAAQW,EAAQmB,KAAK9B,GAC7F,OAAO,wBACNsE,MAAM,SACNtE,IAAK,CAAC,SAAUxF,GAAGpC,KAAK,KACxB2E,UAAW,CAACC,IAAOuH,GAAIvE,EAAI8D,WAAW,SAAW9G,IAAO8B,MAAQ,IAAI1G,KAAK,KACzEQ,GAAIoH,EACJI,QAAS,kBAAMgD,EAAOpD,KAEtB,yBAAKjD,UAAW,CAACC,IAAOoH,KAAMpH,IAAOwH,YAAYpM,KAAK,MAC/B,oBAAdoH,EAAK/E,KAAsB+E,EAAK/E,KAAKuF,EAAKxF,GAAKgF,EAAK/E,YAMjE,+BACE6I,KCnRS,SAASmB,EAAWhL,GAE/B,IAAMb,EAAKa,EAAMkC,MAAM4D,OAAO3G,GAFyB,EAG3Bc,oBAAS,GAHkB,mBAGhDgL,EAHgD,KAGxCC,EAHwC,OAI7BjL,mBAAS,IAJoB,gCAKvBA,mBAAS,KALc,mBAKhDkJ,EALgD,KAKtCgC,EALsC,OAM3BlL,mBAAS,IANkB,mBAMhD5B,EANgD,KAMxC+M,EANwC,OAOzBnL,mBAAS,IAPgB,mBAOhDuC,EAPgD,KAOvC6I,EAPuC,OAQvBpL,mBAAS,IARc,mBAQhDyF,EARgD,KAQtC4F,EARsC,KAUjDjF,EAAkC6C,mBAAQ,WAC5C,IAAK1G,EAAQG,OAAQ,OAAO,IAAI7C,IAChC,IAFkD,EAE9CyL,EAAO,IAAIzL,IAFmC,cAGpC0C,GAHoC,IAGlD,gCAASsC,EAAT,QAAuByG,EAAK5J,IAAImD,EAAE3F,GAAI2F,IAHY,8BAIlD,OAAOyG,IACR,CAAC/I,IAEE6C,EAAQhH,EAAOgH,OAAS,EAE9B3C,qBAAU,WACNpD,QAAQkM,IAAI,CACRhO,EAAI,CAAEgB,IAAK,eAAiBW,EAAK,kBAC5BrB,KAAKuN,GACLpN,OAAM,eACXT,EAAI,CAAEgB,IAAK,eAAiBW,EAAK,iBAC5BrB,KAAKwN,GACLrN,OAAM,eACXT,EAAI,CAAEgB,IAAK,eAAiBW,EAAK,eAC5BrB,KAAKsN,GACLnN,OAAM,eACpBT,EAAI,CAAEgB,IAAK,eAAiBW,EAAK,iBAC/BrB,KAAKqN,KACCrN,MAAK,kBAAMoN,GAAU,QAIzB,CAACI,EAAaD,IAEjB3I,qBAAU,WACN,GAAK2C,EAAL,CAEA,IADA,IAAIqB,EAAY,IAAI+E,MAAMpG,EAAQ,GACzBtE,EAAI,EAAGA,EAAIsE,EAAQ,EAAGtE,IAAK2F,EAAU3F,GAAK,CAC/CmB,MAAO,EACPvB,KAAM,GAEV0F,EAAW1E,IAAI,MAAO,CAClBxC,GAAI,MACJqH,UAAW,MACXE,iBAER,CAACL,EAAYhB,IAEhB,IAAMqG,EAAW,CAAC,WAAY,aApD4B,EAqD5BzL,mBAAS,YArDmB,mBAqDnD0L,EArDmD,KAqD1CC,EArD0C,KA6DvD,OANHlJ,qBAAU,WACT,IAAImJ,EAAOC,OAAOC,SAASF,KAAKpL,MAAM,GACjCiL,EAASvI,SAAS0I,IACvBD,EAAWC,KACT,CAACC,OAAOC,SAASF,OAEZZ,EAID,yBAAK9L,GAAG,QACJ,yBAAKmE,UAAU,aACvB,4BAAKjF,EAAO2C,MAEZ,iCACC,yBAAKsC,UAAU,eACd,uBAAGmB,KAAK,YAAYnB,UAAU,iBAC7B,yCAED,uBAAGmB,KAAK,aAAanB,UAAU,iBAC9B,4CAIH,iCACc,aAAZqI,EAAyB,kBAACzG,EAAD,CACzB/F,GAAIa,EAAMkC,MAAM4D,OAAO3G,GACvBkH,WAAYA,EACZhI,OAAQA,EACRqH,SAAUA,IACN,KACQ,cAAZiG,EAA0B,kBAAC3C,EAAD,CAC1BgD,iBAAkB,aAClBtE,KAAM,aACNrJ,OAAQA,EACRmE,QAASiJ,MAAMQ,KAAK5F,EAAW5D,UAC/B0G,SAAUA,IACN,QA/Bc,KCjDT+C,MAdf,WACE,OACI,kBAAC,IAAD,CAAQC,SAAU9O,IACZ,kBAAC,IAAD,CAAO+O,OAAQ,YAAiB,IAAfL,EAAc,EAAdA,SACb,OACI,kBAAC,IAAD,CAAQA,SAAUA,GACd,kBAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,mBAAmBF,OAAQ,SAACpM,GAAD,OAAW,kBAACgL,EAAehL,YCC5EuM,QACW,cAA7BT,OAAOC,SAASS,UAEe,UAA7BV,OAAOC,SAASS,UAEhBV,OAAOC,SAASS,SAAStK,MACvB,2DCZNuK,IAASL,OACP,kBAAC,IAAMM,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjP,MAAK,SAAAkP,GACJA,EAAaC,gBAEdhP,OAAM,SAAAE,GACLhB,QAAQgB,MAAMA,EAAM+E,c","file":"static/js/main.94ed72ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"th\":\"crosstable_th__Gp7TR\",\"round\":\"crosstable_round__2RGZ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"chesscom_wrapper__3vwwR\",\"container\":\"chesscom_container__AGg5n\",\"boardLabel\":\"chesscom_boardLabel__1N2Qy\",\"board\":\"chesscom_board__3LGEQ\",\"fade-in\":\"chesscom_fade-in__15-gn\",\"row\":\"chesscom_row__17flm\",\"square\":\"chesscom_square___JdY5\",\"W\":\"chesscom_W__1Kbfl\",\"B\":\"chesscom_B__misXA\"};","module.exports = __webpack_public_path__ + \"static/media/watch.ddf443c3.svg\";","import axios, { AxiosRequestConfig, AxiosResponse, AxiosError } from 'axios';\nimport { useProd, prodServer, server } from '../config.json';\nlet errorCallback: (message: string) => void = () => {};\n\nexport const isDev = process.env.NODE_ENV === 'development'; //detects a react dev build\n\nconsole.log('isDev', isDev);\nconst ping = !isDev || useProd ? prodServer : server;\nexport { ping as server };\n\naxios.defaults.baseURL = ping;\n\n\nexport function GET(options: AxiosRequestConfig): Promise<any> {\n\toptions = Object.assign(options, {\n\t\tmethod: 'GET'\n\t});\n\treturn axios(options)\n\t\t.then((res: AxiosResponse<any>) => res.data)\n\t\t.catch((e: AxiosError) => {\n\t\t\tconsole.error(e);\n\t\t\tif (e.response) errorCallback([e.response.status, e.response.statusText, ':', '/' + e.response.config.url?.split('/').pop()].join(' '));\n\t\t\tthrow e;\n\t\t});\n}\n\nexport function POST(options: AxiosRequestConfig): Promise<any> {\n\toptions = Object.assign(options, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t}\n\t});\n\treturn axios(options)\n\t\t.then((res: AxiosResponse<any>) => res.data)\n\t\t.catch((e) => {\n\t\t\tif (e && e.response && e.response.data) errorCallback(e.response.data);\n\t\t\tthrow e;\n\t\t});\n}\n\nexport function setErrorCallback(c: (message: string) => void) {\n\terrorCallback = c;\n}\n\n/**\n * \n\n    startRequests: async function() {\n        try {\n            while (this._requests.length > 0) {\n                if (!this._running) this._running = true;\n                let request = this.dequeue();\n                let method = request.method;\n                let callback = request.callback;\n                let error = null;\n                let response = await method(...request.parameters, request.options)\n                    .catch((e) => error = e);\n                callback(response, error, ...request.callbackParamerters);\n            }\n            this._running = false;\n        } catch(error) {\n            throw error;\n        }\n    },\n */","export const chessCom = /chess\\.com\\/(?:live#tm=|club\\/matches\\/live\\/(?:[a-z-]+\\/)?)([0-9]+)/;","import React, { useReducer, useCallback, useEffect, ReactElement, useState } from 'react';\nimport FENBoard from 'fen-chess-board';\nimport ChessWebAPI, { BoardData, MatchData, Game, ChessPlayer } from 'chess-web-api';\nimport * as regexes from '../utils/regexes';\nimport styles from '../css/chesscom.module.css';\nimport { FaChessPawn, FaChessKing, FaChessKnight, FaChessBishop, FaChessRook, FaChessQueen, FaChessBoard } from 'react-icons/fa';\nimport { IoMdSquare, IoMdSquareOutline } from 'react-icons/io';\n/*\nFENBoard.constructor.prototype.flip = (): string[][] => {\n    let fen = this.board;\n    return this.board.map(row => row.reverse()).reverse();\n}*/\n\nconst Chess = new ChessWebAPI({ queue: true });\n\nexport async function loadChessComGames(id: number, board: number): Promise<BoardData> {\n    return new Promise((res, rej) => {\n        Chess.dispatch(Chess.getTeamLiveMatchBoard, (data: { body: BoardData }, error) => {\n            if (error) return rej(error);\n            res(data.body);\n        }, [id, board]);\n    });\n}\n\nexport async function loadChessComMatch(id: number): Promise<MatchData> {\n    return new Promise((res, rej) => {\n        Chess.dispatch(Chess.getTeamLiveMatch, (data: { body: MatchData }, error) => {\n            if (error) return rej(error);\n            res(data.body);\n        }, [id]);\n    });\n}\n\nexport function colour(piece: string): 'W' | 'B' {\n    if (piece.toLowerCase() === piece) return 'B';\n    return 'W';\n}\n\nconst Piece: Map<string, ReactElement> = new Map([\n    ['p', <FaChessPawn />],\n    ['n', <FaChessKnight />],\n    ['b', <FaChessBishop />],\n    ['r', <FaChessRook />],\n    ['q', <FaChessQueen />],\n    ['k', <FaChessKing />]\n]);\n\ninterface ChessComProps {\n    matchURL: string\n    enforceBoards: number | undefined\n}\n\nexport default function ChessCom(props: ChessComProps) {\n\n    const [boards, setBoards] = useState(props.enforceBoards || 20);\n    const [games, setGame] = useReducer((state: {game: Game, boardScores: {[key: string]: number}}[], action: {\n        board: number,\n        boardScores: {[key: string]: number}\n        game: Game\n    }) => {\n        let arr = state.slice(0);\n        arr[action.board] = {\n            boardScores: action.boardScores,\n            game: action.game\n        };\n        return arr;\n    }, []);\n    const [id, setID] = useState(0);\n    const [teams, setTeam] = useReducer((state: [string, string], action: {\n        name: string\n        i: number\n    }) => {\n        state[action.i] = action.name;\n        return state;\n    }, ['', '']);\n    const [teamDict, setTeamDict] = useReducer((state: {[key: string]: number}, action: {player: ChessPlayer, team: number}) => {\n        let res = Object.assign({}, state);\n        res[action.player.username.toLowerCase()] = action.team;\n        return res;\n    }, {});\n    const [matchFinished, setMatchFinished] = useState(false);\n    const [boardsFinished, setFinished] = useReducer((state: boolean[], action: {\n       board: number,\n       set: boolean\n    }) => {\n        let arr = state.slice(0);\n        arr[action.board] = action.set;\n        return arr;\n    }, []);\n\n    const fetchChessCom = useCallback(async () => {\n        let matches = props.matchURL.match(regexes.chessCom);\n        if (!matches) return console.error('Invalid URL: ', props.matchURL);\n        let id = Number(matches[1]);\n        try {\n            let body = await loadChessComMatch(id);\n            if (body.boards) setBoards(body.boards);\n            if (body.status === 'finished' || body.status === 'scheduled') setMatchFinished(true);\n            for (let t of Object.values(body.teams)) {\n                let i = teams.findIndex(v => !v || v === t.name);\n                setTeam({ name: t.name, i });\n                for (let player of t.players) {\n                    setTeamDict({\n                        player,\n                        team: i\n                    });\n                }\n            }\n        } catch (e) {\n            console.error(e);\n        }\n        setID(id);\n    }, [props.matchURL, teams]);\n\n    useEffect(() => {\n        fetchChessCom();\n    }, [fetchChessCom]);\n\n    const ping = useCallback(async () => {\n        if (!id) return;\n        if (matchFinished && games.length) return;\n        for (let i = 1; i < boards + 1; i++) {\n            if (boardsFinished[i]) continue;\n            let x = loadChessComGames(id, i)\n                .then((fetchedGames) => {\n                    let game = fetchedGames.games[fetchedGames.games.length - 1];\n                    setGame({\n                        game: game,\n                        boardScores: fetchedGames.board_scores,\n                        board: i\n                    });\n                    if (Date.now() > game.end_time) setFinished({board: i, set: true});\n                    return true;\n                })\n                .catch((e) => {\n                    if (e.message.includes('doesn\\'t have board')) {\n                        setBoards(i - 1);\n                        return false;\n                    }\n                    return true;\n                });\n            if (boards === (props.enforceBoards || 20)) {\n                if (await x === false) break;\n            }\n        }\n\n    }, [id, boards, matchFinished, boardsFinished, games.length])\n\n    useEffect(() => {\n        let x = setInterval(ping, 1000);\n        return () => clearInterval(x);\n    }, [ping]);\n\n    if (!games.length && !boards) return <div>Match has not yet started!</div>\n\n    return (\n        <div className={styles.container}>\n            {games.map((pairing, i) => {\n                if (!pairing) return null;\n                let scores = Object.entries(pairing.boardScores);\n                let g = pairing.game;\n                let flip = teamDict[g.black.username.toLowerCase()];    // team 1 is black\n                let [w, b] = [\n                    <>\n                        {g.white.username} ({g.white.rating}){' '}\n                        <IoMdSquareOutline />\n                    </>,\n                    <>\n                        {g.black.username} ({g.black.rating}){' '}\n                        <IoMdSquare />\n                    </>\n                ];\n                if (flip) scores = scores.reverse();\n                let fen = new FENBoard(g.fen);\n                let board = fen.board;//flip ? fen.board : fen.flip;\n                return (\n                    <div className={styles.wrapper}>\n                        <div className={styles.boardLabel}>\n                            <span className='bold'>{scores[0][1]}</span>\n                            <a href={'https://www.chess.com/live/game/' + g.url.split('/').pop()} target='_blank' rel='noopener noreferrer'>\n                                <FaChessBoard />\n                            </a>\n                            <span className='bold'>{scores[1][1]}</span>\n                        </div>\n                        <div>{flip ? w : b}{' '}{teams[0]}</div>\n                            <div className={styles.board}>\n                                {board.map(line => {\n                                    return (\n                                        <div className={styles.row}>\n                                            {line.map(p => {\n                                                return (\n                                                    <div className={[styles.square, styles[colour(p)]].join(' ')}>\n                                                        {Piece.get(p.toLowerCase())}\n                                                    </div>\n                                                );\n                                            })}\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        <div>{flip ? b : w}{' '}{teams[1]}</div>\n                    </div>\n                );\n            })}\n        </div>\n    );\n}","import React, { ReactElement, useCallback, useState, useReducer, useEffect } from 'react';\nimport ChessCom, { loadChessComMatch } from '../chess/ChessCom';\nimport * as icons from '../assets/icons/';\nimport * as regexes from '../utils/regexes';\nimport { FaLink } from 'react-icons/fa';\nimport { PairingObject, Player, TournamentStatus } from '../interfaces';\nimport { GET } from '../utils/requests';\n\nexport interface PairingsProps {\n\tid: string\n\tstatus: TournamentStatus\n\tpairings: PairingObject[]\n\tplayerDict: Map<string, Player>\n}\n\nexport default function Pairings(props: PairingsProps): ReactElement {\n\n    const [expanded, setExpanded] = useState('');\n\n    const round = props.status.round || 0;\n\n    const [timeDict, setTime] = useReducer((state: {[key: string]: (number | undefined)[]}, action: {\n        id: string\n        time: number\n        players?: number\n    }) => {\n        let res = Object.assign({}, state);\n        res[action.id] = [action.time, action.players];\n        return res;\n    }, {});\n\n    const populateTimeDict = useCallback(async () => {\n        for (let row of props.pairings) {\n            let link = Object.values(row[2]).find(v => v);\n            if (!link) continue;\n            let matches = link.match(regexes.chessCom) as RegExpMatchArray;\n            if (!matches) link = '';\n            else link = 'https://www.chess.com/club/matches/live/' + matches[1];\n            let id = Number(matches[1]);\n            loadChessComMatch(id)\n                .then((body) => setTime({id: matches[1], time: body.start_time * 1000}))\n                .catch(async (e) => {\n                    if (e.message.includes('not found')) {\n                        let meta = await GET({\n                            url: '/tournament/' + props.id + '/scrapeChessComTeamPage',\n                            params: {\n                                url: link\n                            }\n                        });\n                        setTime({\n                            id: matches[1],\n                            time: new Date(meta['Start Time']).valueOf(),\n                            players: meta['Players per Team']\n                        });\n                    }\n                    else console.error(e);\n                });\n        }\n\t}, [props.pairings, setTime])\n\t\n    useEffect(() => {\n        populateTimeDict();\n    }, [populateTimeDict]);\n\n\treturn (\n\t\t<section>\n\t\t\t\t\t\t\t\n\t\t\t<p>All times in {new Date(Date.now()).toString().slice(25)}</p>\n\t\t\t<table className='download-table full-width'>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td style={{width: '27.5%'}}>White</td>\n\t\t\t\t\t\t<td style={{width: '12.5%'}}>Link</td>\n\t\t\t\t\t\t<td style={{width: '5%'}}></td>\n\t\t\t\t\t\t<td style={{width: '10%'}}>Start Time</td>\n\t\t\t\t\t\t<td style={{width: '5%'}}></td>\n\t\t\t\t\t\t<td style={{width: '12.5%'}}>Watch Live</td>\n\t\t\t\t\t\t<td style={{width: '27.5%'}}>Black</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>                                \n\t\t\t\t\t{props.pairings.map((row, i) => {\n\t\t\t\t\t\tlet id = [row[0].trim(), row[1].trim()].join('.')\n\t\t\t\t\t\tlet w = props.playerDict.get(row[0].trim());\n\t\t\t\t\t\tlet b = props.playerDict.get(row[1].trim());\n\t\t\t\t\t\tlet link = Object.values(row[2]).find(v => v);\n\t\t\t\t\t\tlet matches = link?.match(regexes.chessCom) as RegExpMatchArray;\n\t\t\t\t\t\tif (!matches) link = '';\n\t\t\t\t\t\telse link = 'https://www.chess.com/club/matches/live/' + matches[1];\n\t\t\t\t\t\tlet time = matches && timeDict[matches[1]] ? timeDict[matches[1]][0] : 0;\n\t\t\t\t\t\tlet enforceBoards: number | undefined = matches && timeDict[matches[1]] ? timeDict[matches[1]][1] : undefined;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<tr key={['row', i].join('.')}>\n\t\t\t\t\t\t\t\t\t<td><div className='playerName'>{w?.firstName}</div></td>\n\t\t\t\t\t\t\t\t\t<td style={{padding: 0}}>\n\t\t\t\t\t\t\t\t\t\t{link ? <a className='button' href={link.trim()} target='_blank' rel='noopener noreferrer'>\n\t\t\t\t\t\t\t\t\t\t\t<FaLink />\n\t\t\t\t\t\t\t\t\t\t</a> : null}\n\t\t\t\t\t\t\t\t\t</td>                                                \n\t\t\t\t\t\t\t\t\t<td className={'bold'}>{w?.histories[round]?.game}</td>\n\t\t\t\t\t\t\t\t\t<td>{time ? new Date(time).toString().slice(0, 21) : '-'}</td>\n\t\t\t\t\t\t\t\t\t<td className={'bold'}>{b?.histories[round]?.game}</td>\n\t\t\t\t\t\t\t\t\t<td style={{padding: 0}}>\n\t\t\t\t\t\t\t\t\t\t{link ? <div className='button' onClick={() => setExpanded(expanded ? '' : id)}>\n\t\t\t\t\t\t\t\t\t\t\t<img className='icon' src={icons.watch} alt={'Watch games'}/>\n\t\t\t\t\t\t\t\t\t\t</div> : null}\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td><div className='playerName'>{b?.firstName}</div></td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t{link && expanded === id? <tr>\n\t\t\t\t\t\t\t\t\t<td colSpan={100}>\n\t\t\t\t\t\t\t\t\t\t{row[2].chessComLink || row[2].chessComTeamLink ?\n\t\t\t\t\t\t\t\t\t\t\trow[2].chessComTeamLink ?\n\t\t\t\t\t\t\t\t\t\t\t\t<ChessCom matchURL={row[2].chessComTeamLink} enforceBoards={Number(enforceBoards)}/> :\n\t\t\t\t\t\t\t\t\t\t\t\tnull :\n\t\t\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr> : null}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</section>\n\n\t);\n\n}","import React, { ReactElement, useMemo, useCallback, useReducer } from 'react';\nimport { TournamentStatus, Player, TournamentSettings } from '../interfaces';\n\nimport styles from '../css/crosstable.module.css';\nimport { MdExitToApp } from 'react-icons/md';\n\ninterface TableProps {\n\tsetDisplayPlayer: (id: string) => void\n\tshow: () => void\n\tstatus: TournamentStatus\n\tplayers: Player[]\n\tsettings: TournamentSettings\n}\n\ninterface ColumnData {\n\tid?: (entry: Player, i: number) => string\n\tname: string | ((key: string, i: number) => string)\n\tclassName: 'blank' | 'playerName' | 'locked' | 'rating' | 'unset' | 'edit' | ((v: string, i: number, settings: TournamentSettings) => string),\n\tsort?: false | ((a: any, b: any) => number),\n\tshow?: (entry: Player, i: number, settings: TournamentSettings) => boolean\n\tvalue: (entry: Player, i: number, settings: TournamentSettings) => any\n\tconvert?: (v: any, p: Player, s: TournamentSettings) => string\n\tpostConvert?: (v: string, i: number) => string\n}\n\nconst columns = {\n\tpre: {\n\t\tid: {\n\t\t\tname: '',\n\t\t\tclassName: 'blank',\n\t\t\tsort: false,\n\t\t\tvalue: (): number => 0,\n\t\t\tpostConvert: (v: string, i: number): string => (1 + i).toString()\n\t\t},\n\t\tname: {\n\t\t\tname: 'Name',\n\t\t\tclassName: 'playerName',\n\t\t\tid: (p: Player): string => p.id,\n\t\t\tsort: (a: string, b: string) => {\n\t\t\t\tif (a > b) return 1;\n\t\t\t\tif (a < b) return -1;\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\tvalue: (p: Player, i: number, s: TournamentSettings): string => s.competitors === 'individual' ? [p.firstName, p.lastName].join(' ') : p.firstName\n\t\t},\n\t\trating: {\n\t\t\tname: 'Rating',\n\t\t\tclassName: 'locked',\n\t\t\tvalue: (p: Player): number => p.rating,\n\t\t\tshow: (entry: Player, i: number, s: TournamentSettings) => s.showRatings\n\t\t}\n\t},\n\troundColumn: {\n\t\tname: (key: string, i: number): string => key.slice(-1),\n\t\tclassName: (v: string, i: number, s: TournamentSettings) => {\n\t\t\tif (v === '*') return 'edit';\n\t\t\tif (v === '') return 'unset';\n\t\t\telse return 'locked';\n\t\t},\n\t\tvalue: () => {},\n\t\tconvert: (v: string, p: Player, s: TournamentSettings) => {\n\t\t\tif (v === '') return '';\n\t\t\telse if (v === '*') return '*';\n\t\t\tlet nb = parseInt(v);\n\t\t\tlet output: string;\n\t\t\tif (nb === 0.5) output = '½';\n\t\t\telse output = nb.toString();\n\t\t\tif (v.endsWith('b')) output += 'b';\n\t\t\treturn output;\n\t\t},\n\t\tsort: (a: string, b: string): number => {\n\t\t\tif (a === b) return 0;\n\t\t\tif (a === '') return -1;\n\t\t\telse if (b === '') return -1;\n\t\t\tif (a === '*') return 1;\n\t\t\telse if (b === '*') return -1;\n\t\t\tlet [aN, bN] = [parseInt(a), parseInt(b)];\n\t\t\tif (a.endsWith('b')) aN -= 0.001;\n\t\t\tif (b.endsWith('b')) bN -= 0.001;\n\t\t\treturn bN - aN;\n\t\t}\n\t},\n\tpost: {\n\t\tscore: {\n\t\t\tname: 'MP',\n\t\t\tclassName: 'locked',\n\t\t\tvalue: (p: Player) => parseFloat(p.score.toString()),\n\t\t\tconvert: (v: number, p: Player): string => v.toFixed(1) + ' / ' + p.played\n\t\t},\n\t\tgamePoints: {\n\t\t\tname: 'GP',\n\t\t\tclassName: 'locked',\n\t\t\tvalue: (p: Player) => p.gamePoints,\n\t\t\tconvert: (v: number): string => v.toFixed(1)\n\t\t},\n\t\twinPercentage: {\n\t\t\tname: 'Win %',\n\t\t\tclassName: 'rating',\n\t\t\tvalue: (p: Player): number => p.played === 0 ? -1 : p.score * 100 / p.played,\n\t\t\tconvert: (v: number): string => {\n\t\t\t\tif (v < 0) return '-';\n\t\t\t\treturn v.toFixed()\n\t\t\t}\n\t\t},\n\t\tperformanceRating: {\n\t\t\tname: 'Perf',\n\t\t\tclassName: 'rating',\n\t\t\tvalue: (p: Player) => p.performanceRating,\n\t\t\tconvert: (v: number): string => v.toFixed(),\n\t\t\tshow: (entry: Player, i: number, s: TournamentSettings) => s.showRatings\n\t\t},\n\t\tratingDifference: {\n\t\t\tname: 'P. +/-',\n\t\t\tclassName: 'rating',\n\t\t\tvalue: (p: Player): number => {\n\t\t\t\tif (!p.performanceRating) return 0;\n\t\t\t\treturn p.performanceRating - p.rating;\n\t\t\t},\n\t\t\tconvert: (v: number): string => {\n\t\t\t\tif (!v) return '';\n\t\t\t\tif (v > 0) return '+' + v.toString();\n\t\t\t\telse return v.toString()\n\t\t\t},\n\t\t\tshow: (entry: Player, i: number, s: TournamentSettings) => s.showRatings\n\t\t},\n\t\texpectedScore: {\n\t\t\tname: 'Expected',\n\t\t\tclassName: 'rating',\n\t\t\tvalue: (p: Player): number => p.expectedScore,\n\t\t\tconvert: (v: number, p: Player): string => v.toFixed(1) + ' / ' + p.played,\n\t\t\tshow: (entry: Player, i: number, s: TournamentSettings) => s.showRatings\n\t\t},\n\t\texpectedDifference: {\n\t\t\tname: 'E. +/-',\n\t\t\tclassName: 'rating',\n\t\t\tvalue: (p: Player): number => p.score - p.expectedScore,\n\t\t\tconvert: (v: number): string => {\n\t\t\t\tif (typeof v === 'undefined') return '';\n\t\t\t\tif (v > 0) return '+' + v.toFixed(2);\n\t\t\t\telse return v.toFixed(2)\n\t\t\t},\n\t\t\tshow: (entry: Player, i: number, s: TournamentSettings) => s.showRatings\n\t\t},\n\t}\n} as {\n\tpre: {\n\t\t[key: string]: ColumnData\n\t},\n\troundColumn: ColumnData\n\tpost: {\n\t\t[key: string]: ColumnData\n\t}\n\n}\n\nexport default function CrossTable(props: TableProps): ReactElement {\n\n\tconst totalRounds = useMemo((): number => {\n\t\tlet totalRounds: number;\n\t\tif (props.status.round > props.settings.totalRounds) totalRounds = props.status.round;\n\t\telse if (props.settings.totalRounds === 'Infinity') totalRounds = props.status.round;\n\t\telse totalRounds = props.settings.totalRounds;\n\t\treturn totalRounds;\n\t}, [props.status.round, props.settings.totalRounds]);\n\n\tconst roundHeaders = useMemo(() => {\n\t\tlet h = [] as string[];\n\t\tfor (let i = 1; i <= totalRounds; i++) {\n\t\t\th.push('round.' + i.toString());\n\t\t}\n\t\treturn h;\n\t}, [totalRounds]);\n\n\tconst headers: string[] = useMemo(() => [...Object.keys(columns.pre), ...roundHeaders, ...Object.keys(columns.post)], [roundHeaders])\n\t\t.filter((key, i) => {\n\t\t\tlet meta = columns.pre[key] || columns.post[key];\n\t\t\tif (!meta) return true;\n\t\t\tif (meta.show && !meta.show(null as any as Player, i, props.settings)) return false;\n\t\t\treturn true;\n\t\t});\n\n\tconst setSortHeader = useCallback((state: [string, number], action: string): [string, number] => {\n\t\tif (!headers.includes(action)) return ['', 0];\n\t\tif (state[0] !== action) return [action, 0];\n\t\telse return [action, state[1] + 1];\n\t}, [headers]);\n\tconst [sort, sortBy] = useReducer(setSortHeader, ['score', 0])\n\n\tconst renderRounds = useCallback((p: Player) => {\n\t\tlet scores = [''] as string[];\n\t\tfor (let i = 1; i <= totalRounds; i++) {\n\t\t\tif (!p.histories[i]) {\n\t\t\t\tif (i === props.status.round) scores[i] = '*'\n\t\t\t\telse scores[i] = '';\n\t\t\t\tcontinue;\n\t\t\t};\n\t\t\tif (p.histories[i].match === null || p.histories[i].match === undefined) scores[i] = '*';\n\t\t\telse scores[i] = (p.histories[i].match as number).toString();\n\t\t\tif (p.histories[i].id === 'bye') scores[i] += 'b';\n\t\t}\n\t\treturn scores.slice(1);\n\t}, [totalRounds, props.status.round]);\t\n\n\tconst renderRows: JSX.Element[] = useMemo(() => {\n\t\tlet rowsData = [] as [number, ColumnData, Player][][];\n\t\tfor (let i = 0; i < props.players.length; i++) {\n\t\t\tlet p = props.players[i];\n\t\t\tif (p.id === 'bye') continue;\n\t\t\tif (p.score === undefined) console.trace();\n\t\t\tlet pres = [] as [number, ColumnData, Player][];\n\t\t\tfor (let [k, meta] of Object.entries(columns.pre)) {\n\t\t\t\tif (meta.show && !meta.show(p, i, props.settings)) continue;\n\t\t\t\tpres.push([meta.value(p, i, props.settings), meta, p]);\n\t\t\t}\n\t\t\tlet rounds = renderRounds(p).map(entry => [entry as any as number, columns.roundColumn, p]) as [number, ColumnData, Player][];\n\t\t\tlet post = [] as [number, ColumnData, Player][];\n\t\t\tfor (let [k, meta] of Object.entries(columns.post)) {\n\t\t\t\tif (meta.show && !meta.show(p, i, props.settings)) continue;\n\t\t\t\tpost.push([meta.value(p, i, props.settings), meta, p]);\n\t\t\t}\n\t\t\tlet rowData = [...pres, ...rounds, ...post];\n\t\t\trowsData.push(rowData);\n\t\t}\n\n\t\tlet sortFunc = (a: number, b: number): number => b - a;\n\t\tlet sortMeta = sort[0].startsWith('round') ? columns.roundColumn : (columns.pre[sort[0]] || columns.post[sort[0]]);\n\t\tif (sortMeta && sortMeta.sort !== false) {\n\t\t\tif (sortMeta.sort) sortFunc = sortMeta.sort;\n\t\t\tlet sortCol = headers.indexOf(sort[0]);\n\t\t\tif (sortCol !== -1)\n\t\t\trowsData = rowsData.sort((a, b) => sort[1] % 2 ? sortFunc(b[sortCol][0], a[sortCol][0]) : sortFunc(a[sortCol][0], b[sortCol][0]));\n\t\t}\n\n\t\tlet rows = rowsData.map((rowData, i) => {\n\t\t\treturn (\n\t\t\t\t<tr key={'row.' + i} className={styles.tr}>\n\t\t\t\t\t{rowData.map(([value, meta, p]: [number, ColumnData, Player], j: number) => {\n\t\t\t\t\t\tlet display = value ? value.toString() : '';\n\t\t\t\t\t\tif (meta.convert) display = meta.convert(value, p, props.settings);\n\t\t\t\t\t\telse if (meta.postConvert) display = meta.postConvert(display, i);\n\t\t\t\t\t\tif (typeof display === 'undefined' || display === '') display = '\\u200b';\n\t\t\t\t\t\tlet className = typeof meta.className === 'function' ? meta.className(display, j, props.settings) : meta.className\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tid={meta.id ? meta.id(p, j) : undefined}\n\t\t\t\t\t\t\t\t\tkey={[value, j].join('.')}\n\t\t\t\t\t\t\t\t\tclassName={[styles.cell, className, styles[className]].join(' ')}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{display}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</tr>\n\t\t\t);\n\t\t})\n\t\treturn rows;\n\t}, [props.players, props.settings, renderRounds, sort]);\n\t\t\n\treturn (\n\t\t<section>\n\t\t\t<table className={['download-table full-width', styles.table].join(' ')}>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t{headers.map((key, i) => {\n\t\t\t\t\t\t\tlet meta = key.startsWith('round') ? columns.roundColumn : (columns.pre[key] || columns.post[key]);\n\t\t\t\t\t\t\treturn <th\n\t\t\t\t\t\t\t\tscope='column'\n\t\t\t\t\t\t\t\tkey={['column', i].join('.')}\n\t\t\t\t\t\t\t\tclassName={[styles.th, key.startsWith('round') ? styles.round : ''].join(' ')}\n\t\t\t\t\t\t\t\tid={key}\n\t\t\t\t\t\t\t\tonClick={() => sortBy(key)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div className={[styles.cell, styles.headerCell].join(' ')}>\n\t\t\t\t\t\t\t\t\t{typeof meta.name === 'function' ? meta.name(key, i) : meta.name}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</th>;\n\t\t\t\t\t\t})}\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\t\t\t\t\t\t\n\t\t\t\t\t{renderRows}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</section>\n\t);\n}","import React, { useEffect, useState, useMemo, useCallback, useReducer } from 'react';\nimport './App.css';\nimport { TournamentProps, TournamentStatus, Player, PairingObject, TournamentSettings } from './interfaces';\nimport { GET } from './utils/requests';\nimport Pairings from './tournament/Pairings';\nimport CrossTable from './tournament/CrossTable';\n\nexport default function Tournament(props: TournamentProps) {\n\n    const id = props.match.params.id\n    const [loaded, setLoaded] = useState(false);\n    const [state, setState] = useState({});\n    const [settings, setSettings] = useState({} as TournamentSettings);\n    const [status, setStatus] = useState({} as TournamentStatus);\n    const [players, setPlayers] = useState([] as Player[]);\n    const [pairings, setPairings] = useState([] as PairingObject[]);\n\n    const playerDict: Map<string, Player> = useMemo(() => {\n        if (!players.length) return new Map();\n        let dict = new Map();\n        for (let p of players) dict.set(p.id, p);\n        return dict;\n    }, [players]);\n\n    const round = status.round || 0;\n\n    useEffect(() => {\n        Promise.all([\n            GET({ url: '/tournament/' + id + '/fetchPlayers'})\n                .then(setPlayers)\n                .catch(() => {}),\n            GET({ url: '/tournament/' + id + '/getPairings'})\n                .then(setPairings)\n                .catch(() => {}),\n            GET({ url: '/tournament/' + id + '/getStatus'})\n                .then(setStatus)\n                .catch(() => {}),\n\t\t\tGET({ url: '/tournament/' + id + '/getSettings'})\n\t\t\t\t.then(setSettings)\n        ]).then(() => setLoaded(true)) /*\n        GET({ url: '/tournament/' + id + '/getState'})\n            .then(setState);*/\n\n    }, [setPairings, setPlayers]);\n\n    useEffect(() => {\n        if (!round) return;\n        let histories = new Array(round + 1);\n        for (let i = 1; i < round + 1; i++) histories[i] = {\n            match: 0,\n            game: 0\n        };\n        playerDict.set('bye', {\n            id: 'bye',\n            firstName: 'BYE',\n            histories\n        } as any as Player);\n\t}, [playerDict, round]);\n\t\n\tconst sections = ['pairings', 'standings'];\n\tconst [section, setSection] = useState('pairings' as 'pairings' | 'standings');\n\n\tuseEffect(() => {\n\t\tlet hash = window.location.hash.slice(1);\n\t\tif (!sections.includes(hash)) return;\n\t\tsetSection(hash as 'pairings' | 'standings');\n\t}, [window.location.hash])\n\n    if (!loaded) return null;\n\n    return (\n\n        <div id='main'>\n            <div className='container'>\n\t\t\t\t<h1>{status.name}</h1>\n\n\t\t\t\t<section>\n\t\t\t\t\t<div className='button-list'>\n\t\t\t\t\t\t<a href='#pairings' className='header-button'>\n\t\t\t\t\t\t\t<h2>Pairings</h2>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a href='#standings' className='header-button'>\n\t\t\t\t\t\t\t<h2>Standings</h2>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t\t<section>\n\t\t\t\t\t{section === 'pairings' ? <Pairings\n\t\t\t\t\t\tid={props.match.params.id}\n\t\t\t\t\t\tplayerDict={playerDict}\n\t\t\t\t\t\tstatus={status}\n\t\t\t\t\t\tpairings={pairings}\n\t\t\t\t\t/> : null}\n\t\t\t\t\t{section === 'standings' ? <CrossTable\t\t\t\t\t\t\n\t\t\t\t\t\tsetDisplayPlayer={() => {}}\n\t\t\t\t\t\tshow={() => {}}\n\t\t\t\t\t\tstatus={status}\n\t\t\t\t\t\tplayers={Array.from(playerDict.values())}\n\t\t\t\t\t\tsettings={settings}\n\t\t\t\t\t/> : null}\n\t\t\t\t</section>\n            </div>\n        </div>\n    );\n}\n","import React, { ReactElement } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Tournament from './Tournament';\nimport './App.css';\n\nfunction App(): ReactElement {\n  return (\n      <Router basename={process.env.PUBLIC_URL}>\n            <Route render={({location}) => {\n                return (\n                    <Switch location={location}>\n                        <Route exact path='/tournament/:id/' render={(props) => <Tournament {...props} />} />\n                    </Switch>\n                );\n            }}/>\n        </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}